language: cpp

# TODO: precise will be deprecated soon, the release target is trusty
# but it makes cmake fails because of the llvm default package (3.5).
dist: precise

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps/llvm-3.8.1/install
    - ${TRAVIS_BUILD_DIR}/gtest
    - ${TRAVIS_BUILD_DIR}/gflags
    - ${TRAVIS_BUILD_DIR}/lcov
    - ${TRAVIS_BUILD_DIR}/boost_cache

git:
  depth: 3

env:
  global:
    - CC="clang-3.8"
    - CXX="clang++-3.8"
    - LCOV_VERSION="1.13"
    - INSTALL_DIR=${DEPS_DIR}/b2
    - JOBS=3
    - BUILD_TYPE=Debug
    - BUILD_DIR=${TRAVIS_BUILD_DIR}/build
    - COVERAGE=OFF
    - PATH="${PATH}:${TRAVIS_BUILD_DIR}/lcov/bin"
    - PATH="/usr/lib/llvm-3.8/bin/:$PATH"
    - CODECOV_TOKEN="71561ee1-2cd7-44a8-934b-ff2fe0be6318"

apt_sources: &apt_sources
  sources:
    - george-edison55-precise-backports
    - ubuntu-toolchain-r-test
    - llvm-toolchain-precise-3.8
apt_base_packages: &apt_base_packages
      - cmake
      - cmake-data
      - clang-3.8
      - llvm-3.8-dev
      - g++-5
      - gcc-5

install:
  - JOBS=2
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - |
    if [ ! -d ${TRAVIS_BUILD_DIR}/gflags/gflags-master ]
    then
      cd ${TRAVIS_BUILD_DIR}/gflags
      wget https://github.com/schuhschuh/gflags/archive/master.zip -O gflags-master.zip
      unzip gflags-master.zip
      cd gflags-master
      mkdir build
      cd build
      export CXXFLAGS="-fPIC"
      cmake ..
      make
    fi
  - |
    if [ ! -d "${TRAVIS_BUILD_DIR}/lcov/bin/lcov" ]
    then
      cd ${TRAVIS_BUILD_DIR}/lcov
      wget "http://downloads.sourceforge.net/ltp/lcov-${LCOV_VERSION}.tar.gz"
      tar xf lcov-${LCOV_VERSION}.tar.gz
      cd lcov-${LCOV_VERSION}
      make install PREFIX=${TRAVIS_BUILD_DIR}/lcov
    fi


boost_install_includes: &boost_install_includes |
  if [ ! -d ${TRAVIS_BUILD_DIR}/boost_cache/boost ]; then
    tmp=$(mktemp -d)
    cd $tmp
    wget -q https://dl.bintray.com/boostorg/release/1.65.0/source/boost_1_65_0.tar.gz
    tar xf boost* boost_1_65_0/boost/
    mv boost_1_65_0/boost ${TRAVIS_BUILD_DIR}/boost_cache
  fi


cmake_command: &cmake_command |
      mkdir -p "${BUILD_DIR}"
      cd "${BUILD_DIR}"
      export CMAKE_OPTIONS="${CMAKE_OPTIONS}
                            -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
                            -DCMAKE_C_COMPILER=clang-3.8
                            -DCMAKE_CXX_COMPILER=clang++-3.8
                            -DCMAKE_LINKER=clang++-3.8
                            -DCMAKE_CXX_FLAGS=${CXXFLAGS}
                            -DGTEST_INSTALL_PATH=${TRAVIS_BUILD_DIR}/gtest
                            -Dgflags_DIR=${TRAVIS_BUILD_DIR}/gflags/gflags-master/build
                            -DENABLE_COVERAGE=${COVERAGE}
                            -DBOOST_INCLUDEDIR=${TRAVIS_BUILD_DIR}/boost_cache"
      echo "CMake_options: ${CMAKE_OPTIONS}"
      cmake ${CMAKE_OPTIONS} ..

matrix:
  include:
    # Job #1, build and test
    - env:
        - COVERAGE=ON
        # Make llvm-cov-3.8 the default
        - CMAKE_OPTIONS="${CMAKE_OPTIONS} -DENABLE_TESTS_WITH_VALGRIND=ON"
      addons:
        apt:
          <<: *apt_sources
          packages:
            - *apt_base_packages
            - llvm-3.8
            - valgrind
      before_install:
        - pip install --user cpp-coveralls
        - *boost_install_includes
      script:
        - *cmake_command
        - make -j${JOBS} gracc
        - make -j${JOBS} check
        - make -j${JOBS} gracc_coverage
      after_success:
        - coveralls --include ${TRAVIS_BUILD_DIR}/src --gcov-options '\-lp' --root ${TRAVIS_BUILD_DIR} --build-root ${BUILD_DIR} --gcov ${TRAVIS_BUILD_DIR}/tools/llvm-gcov --exclude-lines-pattern "assert\(false"

    # Job #2, clang-tidy
    - addons:
        apt:
          <<: *apt_sources
          packages:
            - *apt_base_packages
            - clang-tidy-3.8
            - python
      script:
        - *boost_install_includes
        - *cmake_command
        - |
          make -j${JOBS} googletest
          python2 ${TRAVIS_BUILD_DIR}/tools/run-clang-tidy.py -p ${BUILD_DIR}  -header-filter="${TRAVIS_BUILD_DIR}/(src|test)" -j=${JOBS} -clang-tidy-binary=$(which clang-tidy-3.8)

    # Job #3, clang-format
    - addons:
        apt:
          <<: *apt_sources
          packages:
            - *apt_base_packages
            - clang-format-3.8
      script:
        - *boost_install_includes
        - *cmake_command
        - ${TRAVIS_BUILD_DIR}/tools/clang-format.sh --check

notifications:
    slack:
      rooms:
        - hoppergh:nlwIRc3VKMx48N1WtKfk24Pu
      on_failure: always
      on_success: change
      on_pull_requests: false
    email: false
